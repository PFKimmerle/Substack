@use "sass:color";
@use './_variables' as *;

@mixin transition($property: all, $duration: 0.3s, $easing: ease) {
  transition: $property $duration $easing;
}

@mixin flex($direction: row, $justify: flex-start, $align: center) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

@mixin button($bg-color, $text-color: $white, $hover-color: null) {
  // darkens the bg color for hover state
  $hover-color-value: if($hover-color == null, color.adjust($bg-color, $lightness: -10%), $hover-color);
  
  background-color: $bg-color;
  color: $text-color;
  border: none;
  border-radius: $border-radius;
  padding: $spacing-sm $spacing-md;
  cursor: pointer;
  font-weight: $font-weight-bold;
  @include transition;
  
  &:hover {
    background-color: $hover-color-value;
  }
  
  &:disabled {
    opacity: 0.65;
    cursor: not-allowed;
  }
}

@mixin card {
  background-color: $white;
  border-radius: $border-radius;
  box-shadow: $box-shadow;
  padding: $spacing-lg;
}

@mixin responsive($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  }
}